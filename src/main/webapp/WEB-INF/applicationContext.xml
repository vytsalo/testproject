<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns="http://www.springframework.org/schema/beans" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">


    <!-- ИСКАТЬ РЕСУРСЫ В ВЕБ ИНФ-->
    <mvc:resources mapping="/**" location="/WEB-INF/" />
    <mvc:annotation-driven/>
    <tx:annotation-driven />

    <context:component-scan base-package="controller, dao, service" />


    <bean id="transactionManager"
          class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean>


    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <!-- начало пути файла вьюшки  -->
        <property name="prefix" value="/WEB-INF/jsp/" />
        <!-- конец пути файла вьюшки -->
        <property name="suffix" value=".jsp" />
    </bean>



    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource"
          p:driverClassName="org.postgresql.Driver"
          p:url="jdbc:postgresql://localhost:5432/postgres"
          p:username="postgres"
          p:password="postgres"/>


    <bean id="entityManagerFactory"
          class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
          p:dataSource-ref="dataSource">
        <property name="packagesToScan">
            <array>
                <value>entities</value>
            </array>
        </property>

        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
        </property>

        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">update</prop>
            </props>
        </property>

    </bean>





    <!--

        <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
           &lt;!&ndash; <property name="dataSource" ref="dataSource" />
    &ndash;&gt;
            <property name="persistenceUnitName" value="jpaProperties" />

    &lt;!&ndash;
            <property name="persistenceUnitName" value="LOCAL_PERSISTENCE" />
    &ndash;&gt;
            <property name="packagesToScan" >
                <list>
                    <value>entities</value>
                </list>
            </property>

            <property name="jpaProperties">
                <props>
                    <prop key="hibernate.hbm2ddl.auto">create</prop>
                    <prop key="hibernate.dialect">org.hibernate.dialect.PostgreSQL9Dialect</prop>
                    <prop key="hibernate.max_fetch_depth">2</prop>
                    <prop key="hibernate.show_sql">true</prop>
                    <prop key="hibernate.format_sql">true</prop>
                    <prop key="hibernate.connection.autocommit">false</prop>

                    <prop key="hibernate.connection.driver_class">org.postgresql.Driver</prop>
                    <prop key="hibernate.connection.url">jdbc:postgresql://localhost:5432/postgres</prop>
                    <prop key="hibernate.connection.username">postgres</prop>
                    <prop key="hibernate.connection.password">postgres</prop>
                    <prop key="hibernate.default_schema">public</prop>
                </props>
            </property>
        </bean>-->


    <!--    <bean id="entityManagerFactory"
              class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
            <property name="persistenceXmlLocation" value="classpath:META-INF/persistence.xml"/>
            <property name="jpaVendorAdapter">
                <bean
                        class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
            </property>

        </bean>-->

    <!--  <bean id="emf" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"
            name = "persistenceUnit">
          <property name="dataSource" ref="dataSource"/>
          <property name="jpaVendorAdapter">
              <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
          </property>
      </bean>-->
    <!--
        /initialize em with hibernate-->
    <!--
        <bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
            <property name="driverClassName" value="org.postgresql.Driver"/>
            <property name="url" value="jdbc:postgresql://localhost:5432/postgres"/>
            <property name="username" value="postgres"/>
            <property name="password" value="postgres"/>
        </bean>-->


</beans>